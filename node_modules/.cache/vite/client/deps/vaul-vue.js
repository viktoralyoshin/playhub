import {
  Ji,
  Pi,
  Pl,
  Q,
  Si,
  Xi,
  Zi,
  qi,
  xe,
  zf
} from "./chunk-HZGZ6OQ5.js";
import {
  computed,
  createBlock,
  defineComponent,
  getCurrentInstance,
  mergeProps,
  nextTick,
  normalizeStyle,
  onMounted,
  onUnmounted,
  openBlock,
  ref,
  renderSlot,
  toRefs,
  unref,
  watch,
  watchEffect,
  withCtx
} from "./chunk-6LRXACK2.js";
import "./chunk-624QZG55.js";

// node_modules/vaul-vue/dist/index.js
(function() {
  "use strict";
  try {
    if (typeof document < "u") {
      var e = document.createElement("style");
      e.appendChild(document.createTextNode('[vaul-drawer]{touch-action:none;transform:translate3d(0,100%,0);transition:transform .5s cubic-bezier(.32,.72,0,1)}.vaul-dragging .vaul-scrollable{overflow-y:hidden!important}[vaul-drawer][vaul-drawer-visible=true]{transform:translate3d(0,var(--snap-point-height, 0),0)}[vaul-overlay]{opacity:0;transition:opacity .5s cubic-bezier(.32,.72,0,1)}[vaul-overlay][vaul-drawer-visible=true]{opacity:1}[vaul-drawer]:after{content:"";position:absolute;top:100%;background:inherit;background-color:inherit;left:0;right:0;height:200%}[vaul-overlay][vaul-snap-points=true]:not([vaul-snap-points-overlay=true]):not([data-state=closed]){opacity:0}[vaul-overlay][vaul-snap-points-overlay=true]:not([vaul-drawer-visible=false]){opacity:1}@keyframes fake-animation{}@media (hover: hover) and (pointer: fine){[vaul-drawer]{-webkit-user-select:none;user-select:none}}')), document.head.appendChild(e);
    }
  } catch (a) {
    console.error("vite-plugin-css-injected-by-js", a);
  }
})();
var Je = typeof window < "u" && typeof document < "u";
typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
var Ke = (t) => typeof t < "u";
function Xe(t) {
  return JSON.parse(JSON.stringify(t));
}
function me(t, e, i, s = {}) {
  var n, w, b;
  const {
    clone: $ = false,
    passive: g = false,
    eventName: o,
    deep: y = false,
    defaultValue: d,
    shouldEmit: C
  } = s, u = getCurrentInstance(), B = i || (u == null ? void 0 : u.emit) || ((n = u == null ? void 0 : u.$emit) == null ? void 0 : n.bind(u)) || ((b = (w = u == null ? void 0 : u.proxy) == null ? void 0 : w.$emit) == null ? void 0 : b.bind(u == null ? void 0 : u.proxy));
  let r = o;
  e || (e = "modelValue"), r = r || `update:${e.toString()}`;
  const l = (f) => $ ? typeof $ == "function" ? $(f) : Xe(f) : f, c = () => Ke(t[e]) ? l(t[e]) : d, T = (f) => {
    C ? C(f) && B(r, f) : B(r, f);
  };
  if (g) {
    const f = c(), O = ref(f);
    let R = false;
    return watch(
      () => t[e],
      (A) => {
        R || (R = true, O.value = l(A), nextTick(() => R = false));
      }
    ), watch(
      O,
      (A) => {
        !R && (A !== t[e] || y) && T(A);
      },
      { deep: y }
    ), O;
  } else
    return computed({
      get() {
        return c();
      },
      set(f) {
        T(f);
      }
    });
}
var [le, Qe] = Q("DrawerRoot");
var be = /* @__PURE__ */ new WeakMap();
function h(t, e, i = false) {
  if (!t || !(t instanceof HTMLElement) || !e)
    return;
  const s = {};
  Object.entries(e).forEach(([n, w]) => {
    if (n.startsWith("--")) {
      t.style.setProperty(n, w);
      return;
    }
    s[n] = t.style[n], t.style[n] = w;
  }), !i && be.set(t, s);
}
function X(t, e) {
  if (!t || !(t instanceof HTMLElement))
    return;
  const i = be.get(t);
  i && (e ? t.style[e] = i[e] : Object.entries(i).forEach(([s, n]) => {
    t.style[s] = n;
  }));
}
function Q2(t) {
  const e = window.getComputedStyle(t), i = e.transform || e.webkitTransform || e.mozTransform;
  let s = i.match(/^matrix3d\((.+)\)$/);
  return s ? Number.parseFloat(s[1].split(", ")[13]) : (s = i.match(/^matrix\((.+)\)$/), s ? Number.parseFloat(s[1].split(", ")[5]) : null);
}
function Ze(t) {
  return 8 * (Math.log(t + 1) - 2);
}
var m = {
  DURATION: 0.5,
  EASE: [0.32, 0.72, 0, 1]
};
var ye = 0.4;
function Fe({
  activeSnapPoint: t,
  snapPoints: e,
  drawerRef: i,
  overlayRef: s,
  fadeFromIndex: n,
  onSnapPointChange: w
}) {
  const b = computed(
    () => (e.value && t.value === e.value[e.value.length - 1]) ?? null
  ), $ = computed(
    () => e.value && e.value.length > 0 && ((n == null ? void 0 : n.value) || (n == null ? void 0 : n.value) === 0) && !Number.isNaN(n == null ? void 0 : n.value) && e.value[(n == null ? void 0 : n.value) ?? -1] === t.value || !e.value
  ), g = computed(
    () => {
      var r;
      return ((r = e.value) == null ? void 0 : r.findIndex((l) => l === t.value)) ?? null;
    }
  ), o = computed(
    () => {
      var r;
      return ((r = e.value) == null ? void 0 : r.map((l) => {
        const c = typeof window < "u", T = typeof l == "string";
        let f = 0;
        T && (f = Number.parseInt(l, 10));
        const O = T ? f : c ? l * window.innerHeight : 0;
        return c ? window.innerHeight - O : O;
      })) ?? [];
    }
  ), y = computed(
    () => {
      var r;
      return g.value !== null ? (r = o.value) == null ? void 0 : r[g.value] : null;
    }
  ), d = (r) => {
    var c, T, f, O;
    const l = ((c = o.value) == null ? void 0 : c.findIndex((R) => R === r)) ?? null;
    nextTick(() => {
      var R;
      w(l, o.value), h((R = i.value) == null ? void 0 : R.$el, {
        transition: `transform ${m.DURATION}s cubic-bezier(${m.EASE.join(",")})`,
        transform: `translate3d(0, ${r}px, 0)`
      });
    }), o.value && l !== o.value.length - 1 && l !== (n == null ? void 0 : n.value) ? h((T = s.value) == null ? void 0 : T.$el, {
      transition: `opacity ${m.DURATION}s cubic-bezier(${m.EASE.join(",")})`,
      opacity: "0"
    }) : h((f = s.value) == null ? void 0 : f.$el, {
      transition: `opacity ${m.DURATION}s cubic-bezier(${m.EASE.join(",")})`,
      opacity: "1"
    }), t.value = l !== null ? ((O = e.value) == null ? void 0 : O[l]) ?? null : null;
  };
  watch(
    [t, o, e],
    () => {
      var r;
      if (t.value) {
        const l = ((r = e.value) == null ? void 0 : r.findIndex((c) => c === t.value)) ?? -1;
        o.value && l !== -1 && typeof o.value[l] == "number" && d(o.value[l]);
      }
    },
    {
      immediate: true
      // if you want to run the effect immediately as well
    }
  );
  function C({
    draggedDistance: r,
    closeDrawer: l,
    velocity: c,
    dismissible: T
  }) {
    var L, j, W;
    if (n === void 0)
      return;
    const f = (y.value ?? 0) - r, O = g.value === (n.value ?? 0) - 1, R = g.value === 0, A = r > 0;
    if (O && h((L = s.value) == null ? void 0 : L.$el, {
      transition: `opacity ${m.DURATION}s cubic-bezier(${m.EASE.join(",")})`
    }), c > 2 && !A) {
      T ? l() : d(o.value[0]);
      return;
    }
    if (c > 2 && A && o && e.value) {
      d(o.value[e.value.length - 1]);
      return;
    }
    const G = (j = o.value) == null ? void 0 : j.reduce((_, I) => typeof _ != "number" || typeof I != "number" ? _ : Math.abs(I - f) < Math.abs(_ - f) ? I : _);
    if (c > ye && Math.abs(r) < window.innerHeight * 0.4) {
      const _ = A ? 1 : -1;
      if (_ > 0 && b) {
        d(o.value[(((W = e.value) == null ? void 0 : W.length) ?? 0) - 1]);
        return;
      }
      if (R && _ < 0 && T && l(), g.value === null)
        return;
      d(o.value[g.value + _]);
      return;
    }
    d(G);
  }
  function u({ draggedDistance: r }) {
    var c;
    if (y.value === null)
      return;
    const l = y.value - r;
    h((c = i.value) == null ? void 0 : c.$el, {
      transform: `translate3d(0, ${l}px, 0)`
    });
  }
  function B(r, l) {
    if (!e || typeof g.value != "number" || !o.value || n === void 0)
      return null;
    const c = g.value === (n.value ?? 0) - 1;
    if (g.value >= (n.value ?? 0) && l)
      return 0;
    if (c && !l)
      return 1;
    if (!$.value && !c)
      return null;
    const f = c ? g.value + 1 : g.value - 1, O = c ? o.value[f] - o.value[f - 1] : o.value[f + 1] - o.value[f], R = r / Math.abs(O);
    return c ? 1 - R : R;
  }
  return {
    isLastSnapPoint: b,
    shouldFade: $,
    getPercentageDragged: B,
    activeSnapPointIndex: g,
    onRelease: C,
    onDrag: u,
    snapPointsOffset: o
  };
}
var q = null;
function et(t) {
  const { isOpen: e, modal: i, nested: s, hasBeenOpened: n } = t, w = ref(typeof window < "u" ? window.location.href : ""), b = ref(0);
  function $() {
    if (q === null && e.value) {
      q = {
        position: document.body.style.position,
        top: document.body.style.top,
        left: document.body.style.left,
        height: document.body.style.height
      };
      const { scrollX: o, innerHeight: y } = window;
      document.body.style.position = "fixed", document.body.style.top = `-${b.value}px`, document.body.style.left = `-${o}px`, document.body.style.right = "0px", document.body.style.height = "auto", setTimeout(() => {
        requestAnimationFrame(() => {
          const d = y - window.innerHeight;
          d && b.value >= y && (document.body.style.top = `-${b.value + d}px`);
        });
      }, 300);
    }
  }
  function g() {
    if (q !== null) {
      const o = -Number.parseInt(document.body.style.top, 10), y = -Number.parseInt(document.body.style.left, 10);
      Object.assign(document.body.style, q), requestAnimationFrame(() => {
        if (w.value !== window.location.href) {
          w.value = window.location.href;
          return;
        }
        window.scrollTo(y, o);
      }), q = null;
    }
  }
  return onMounted(() => {
    function o() {
      b.value = window.scrollY;
    }
    o(), window.addEventListener("scroll", o), onUnmounted(() => {
      window.removeEventListener("scroll", o);
    });
  }), watch([e, n, w], () => {
    s.value || !n.value || (e.value ? ($(), i || setTimeout(() => {
      g();
    }, 500)) : g());
  }), { restorePositionSetting: g };
}
var tt = 0.25;
var nt = 100;
var ge = 8;
var V = 16;
var at = 26;
var we = "vaul-dragging";
function ot(t, e) {
  return t && t.value ? t : e;
}
function it(t) {
  const {
    emitDrag: e,
    emitRelease: i,
    emitClose: s,
    emitOpenChange: n,
    open: w,
    dismissible: b,
    nested: $,
    fixed: g,
    modal: o,
    shouldScaleBackground: y,
    scrollLockTimeout: d,
    closeThreshold: C,
    activeSnapPoint: u,
    fadeFromIndex: B
  } = t, r = ref(w.value ?? false), l = ref(false), c = ref(false), T = ref(false), f = ref(false), O = ref(null), R = ref(null), A = ref(null), G = ref(null), L = ref(null), j = ref(true), W = ref(null), _ = ref(0), I = ref(false);
  ref(0);
  const v = ref(null);
  ref(0);
  const re = computed(() => {
    var a;
    return ((a = v.value) == null ? void 0 : a.$el.getBoundingClientRect().height) || 0;
  }), U = ot(
    t.snapPoints,
    ref(void 0)
  ), {
    activeSnapPointIndex: se,
    onRelease: De,
    snapPointsOffset: $e,
    onDrag: Oe,
    shouldFade: ue,
    getPercentageDragged: Se
  } = Fe({
    snapPoints: U,
    activeSnapPoint: u,
    drawerRef: v,
    fadeFromIndex: B,
    overlayRef: O,
    onSnapPointChange: Te
  });
  function Te(a, p) {
    U.value && a === p.length - 1 && (R.value = /* @__PURE__ */ new Date());
  }
  const { restorePositionSetting: Re } = et({
    isOpen: r,
    modal: o,
    nested: $,
    hasBeenOpened: l
  });
  function J() {
    return (window.innerWidth - at) / window.innerWidth;
  }
  function ce(a, p) {
    var M;
    if (!a)
      return false;
    let D = a;
    const P = (M = window.getSelection()) == null ? void 0 : M.toString(), E = v.value ? Q2(v.value.$el) : null, x = /* @__PURE__ */ new Date();
    if (D.hasAttribute("data-vaul-no-drag") || D.closest("[data-vaul-no-drag]") || R.value && x.getTime() - R.value.getTime() < 500)
      return false;
    if (E && E > 0)
      return true;
    if (P && P.length > 0)
      return false;
    if (L.value && x.getTime() - L.value.getTime() < d.value && E === 0 || p)
      return L.value = x, false;
    for (; D; ) {
      if (D.scrollHeight > D.clientHeight) {
        if (D.scrollTop !== 0)
          return L.value = /* @__PURE__ */ new Date(), false;
        if (D.getAttribute("role") === "dialog")
          return true;
      }
      D = D.parentNode;
    }
    return true;
  }
  function Pe(a) {
    !b.value && !U.value || v.value && !v.value.$el.contains(a.target) || (T.value = true, A.value = /* @__PURE__ */ new Date(), a.target.setPointerCapture(a.pointerId), _.value = a.screenY);
  }
  function Ee(a) {
    var p, D, P, E, x, M;
    if (T.value) {
      const K = _.value - a.screenY, te = K > 0;
      if (U.value && se.value === 0 && !b.value || !j.value && !ce(a.target, te))
        return;
      if ((p = v == null ? void 0 : v.value) == null || p.$el.classList.add(we), j.value = true, h((D = v.value) == null ? void 0 : D.$el, {
        transition: "none"
      }), h((P = O.value) == null ? void 0 : P.$el, {
        transition: "none"
      }), U.value && Oe({ draggedDistance: K }), te && !U.value) {
        const ae = Ze(K);
        h((E = v.value) == null ? void 0 : E.$el, {
          transform: `translate3d(0, ${Math.min(ae * -1, 0)}px, 0)`
        });
        return;
      }
      const ne = Math.abs(K), ve = document.querySelector("[vaul-drawer-wrapper]");
      let k = ne / re.value;
      const pe = Se(
        ne,
        te
      );
      pe !== null && (k = pe);
      const Be = 1 - k;
      if ((ue.value || B.value && se.value === B.value - 1) && (e(k), h(
        (x = O.value) == null ? void 0 : x.$el,
        {
          opacity: `${Be}`,
          transition: "none"
        },
        true
      )), ve && O.value && y.value) {
        const ae = Math.min(J() + k * (1 - J()), 1), xe2 = 8 - k * 8, Ue = Math.max(0, 14 - k * 14);
        h(
          ve,
          {
            borderRadius: `${xe2}px`,
            transform: `scale(${ae}) translate3d(0, ${Ue}px, 0)`,
            transition: "none"
          },
          true
        );
      }
      U.value || h((M = v.value) == null ? void 0 : M.$el, {
        transform: `translate3d(0, ${ne}px, 0)`
      });
    }
  }
  function de() {
    var D;
    if (!v.value)
      return;
    const a = document.querySelector("[vaul-drawer-wrapper]"), p = Q2(v.value.$el);
    h(v.value.$el, {
      transform: "translate3d(0, 0, 0)",
      transition: `transform ${m.DURATION}s cubic-bezier(${m.EASE.join(",")})`
    }), h((D = O.value) == null ? void 0 : D.$el, {
      transition: `opacity ${m.DURATION}s cubic-bezier(${m.EASE.join(",")})`,
      opacity: "1"
    }), y.value && p && p > 0 && r.value && h(
      a,
      {
        borderRadius: `${ge}px`,
        overflow: "hidden",
        transform: `scale(${J()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`,
        transformOrigin: "top",
        transitionProperty: "transform, border-radius",
        transitionDuration: `${m.DURATION}s`,
        transitionTimingFunction: `cubic-bezier(${m.EASE.join(",")})`
      },
      true
    );
  }
  function Y() {
    var a;
    v.value && (h(v.value.$el, {
      transform: "translate3d(0, 100%, 0)",
      transition: `transform ${m.DURATION}s cubic-bezier(${m.EASE.join(",")})`
    }), h((a = O.value) == null ? void 0 : a.$el, {
      opacity: "0",
      transition: `opacity ${m.DURATION}s cubic-bezier(${m.EASE.join(",")})`
    }), fe(false), Re(), window.setTimeout(() => {
      c.value = false, r.value = false;
    }, 300), window.setTimeout(() => {
      U.value && (u.value = U.value[0]);
    }, m.DURATION * 1e3));
  }
  watchEffect(() => {
    if (!r.value && y.value && Je) {
      const a = setTimeout(() => {
        X(document.body);
      }, 200);
      return () => clearTimeout(a);
    }
  });
  function Ne(a) {
    if (!T.value || !v.value)
      return;
    v.value.$el.classList.remove(we), j.value = false, T.value = false, G.value = /* @__PURE__ */ new Date();
    const p = Q2(v.value.$el);
    if (!ce(a.target, false) || !p || Number.isNaN(p) || A.value === null)
      return;
    const D = G.value.getTime() - A.value.getTime(), P = _.value - a.screenY, E = Math.abs(P) / D;
    if (E > 0.05 && (f.value = true, window.setTimeout(() => {
      f.value = false;
    }, 200)), U.value) {
      De({
        draggedDistance: P,
        closeDrawer: Y,
        velocity: E,
        dismissible: b.value
      }), i(true);
      return;
    }
    if (P > 0) {
      de(), i(true);
      return;
    }
    if (E > ye) {
      Y(), i(false);
      return;
    }
    const x = Math.min(
      v.value.$el.getBoundingClientRect().height ?? 0,
      window.innerHeight
    );
    if (p >= x * C.value) {
      Y(), i(false);
      return;
    }
    i(true), de();
  }
  watch(r, (a) => {
    a && (R.value = /* @__PURE__ */ new Date(), fe(true)), n(a);
  }, { immediate: true }), watch(w, (a) => {
    a ? (r.value = a, l.value = true) : Y();
  }, { immediate: true });
  function fe(a) {
    const p = document.querySelector("[vaul-drawer-wrapper]");
    !p || !y.value || (a ? (h(document.body, {
      background: document.body.style.backgroundColor || document.body.style.background
    }), h(
      document.body,
      {
        background: "black"
      },
      true
    ), h(p, {
      borderRadius: `${ge}px`,
      overflow: "hidden",
      transform: `scale(${J()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`,
      transformOrigin: "top",
      transitionProperty: "transform, border-radius",
      transitionDuration: `${m.DURATION}s`,
      transitionTimingFunction: `cubic-bezier(${m.EASE.join(",")})`
    })) : (X(p, "overflow"), X(p, "transform"), X(p, "borderRadius"), h(p, {
      transitionProperty: "transform, border-radius",
      transitionDuration: `${m.DURATION}s`,
      transitionTimingFunction: `cubic-bezier(${m.EASE.join(",")})`
    })));
  }
  function Ae(a) {
    var P, E;
    const p = a ? (window.innerWidth - V) / window.innerWidth : 1, D = a ? -V : 0;
    W.value && window.clearTimeout(W.value), h((P = v.value) == null ? void 0 : P.$el, {
      transition: `transform ${m.DURATION}s cubic-bezier(${m.EASE.join(",")})`,
      transform: `scale(${p}) translate3d(0, ${D}px, 0)`
    }), !a && ((E = v.value) != null && E.$el) && (W.value = window.setTimeout(() => {
      var x, M;
      h((x = v.value) == null ? void 0 : x.$el, {
        transition: "none",
        transform: `translate3d(0, ${Q2((M = v.value) == null ? void 0 : M.$el)}px, 0)`
      });
    }, 500));
  }
  function _e(a) {
    var E;
    if (a < 0)
      return;
    const p = (window.innerWidth - V) / window.innerWidth, D = p + a * (1 - p), P = -V + a * V;
    h((E = v.value) == null ? void 0 : E.$el, {
      transform: `scale(${D}) translate3d(0, ${P}px, 0)`,
      transition: "none"
    });
  }
  function Ce(a) {
    var P;
    const p = a ? (window.innerWidth - V) / window.innerWidth : 1, D = a ? -V : 0;
    a && h((P = v.value) == null ? void 0 : P.$el, {
      transition: `transform ${m.DURATION}s cubic-bezier(${m.EASE.join(
        ","
      )})`,
      transform: `scale(${p}) translate3d(0, ${D}px, 0)`
    });
  }
  return {
    open: w,
    isOpen: r,
    modal: o,
    keyboardIsOpen: I,
    hasBeenOpened: l,
    isVisible: c,
    drawerRef: v,
    drawerHeightRef: re,
    overlayRef: O,
    isDragging: T,
    dragStartTime: A,
    isAllowedToDrag: j,
    snapPoints: U,
    activeSnapPoint: u,
    pointerStartY: _,
    dismissible: b,
    snapPointsOffset: $e,
    shouldFade: ue,
    fadeFromIndex: B,
    shouldScaleBackground: y,
    onPress: Pe,
    onDrag: Ee,
    onRelease: Ne,
    closeDrawer: Y,
    onNestedDrag: _e,
    onNestedRelease: Ce,
    onNestedOpenChange: Ae,
    emitClose: s,
    emitDrag: e,
    emitRelease: i,
    emitOpenChange: n,
    nested: $
  };
}
var lt = defineComponent({
  __name: "DrawerRoot",
  props: {
    activeSnapPoint: { default: void 0 },
    closeThreshold: { default: tt },
    shouldScaleBackground: { type: Boolean, default: void 0 },
    scrollLockTimeout: { default: nt },
    fixed: { type: Boolean, default: void 0 },
    dismissible: { type: Boolean, default: true },
    modal: { type: Boolean, default: true },
    open: { type: Boolean, default: void 0 },
    defaultOpen: { type: Boolean, default: void 0 },
    nested: { type: Boolean, default: false },
    snapPoints: { default: void 0 },
    fadeFromIndex: { default: void 0 }
  },
  emits: ["drag", "release", "close", "update:open", "update:activeSnapPoint"],
  setup(t, { emit: e }) {
    const i = t, s = e, n = computed(() => i.fadeFromIndex ?? (i.snapPoints && i.snapPoints.length - 1)), w = me(i, "open", s, {
      defaultValue: i.defaultOpen,
      passive: i.open === void 0
    }), b = me(i, "activeSnapPoint", s, {
      passive: i.activeSnapPoint === void 0
    }), $ = {
      emitDrag: (u) => s("drag", u),
      emitRelease: (u) => s("release", u),
      emitClose: () => s("close"),
      emitOpenChange: (u) => {
        s("update:open", u);
      }
    }, { closeDrawer: g, hasBeenOpened: o, modal: y, isOpen: d } = Qe(
      it({
        ...$,
        ...toRefs(i),
        activeSnapPoint: b,
        fadeFromIndex: n,
        open: w
      })
    );
    function C(u) {
      if (w.value !== void 0) {
        $.emitOpenChange(u);
        return;
      }
      u ? (o.value = true, d.value = u) : g();
    }
    return (u, B) => (openBlock(), createBlock(unref(Si), {
      open: unref(d),
      modal: unref(y),
      "onUpdate:open": C
    }, {
      default: withCtx(() => [
        renderSlot(u.$slots, "default")
      ]),
      _: 3
    }, 8, ["open", "modal"]));
  }
});
var ut = defineComponent({
  __name: "DrawerRootNested",
  props: {
    activeSnapPoint: {},
    closeThreshold: {},
    shouldScaleBackground: { type: Boolean },
    scrollLockTimeout: {},
    fixed: { type: Boolean },
    dismissible: { type: Boolean },
    modal: { type: Boolean },
    open: { type: Boolean },
    defaultOpen: { type: Boolean },
    nested: { type: Boolean },
    snapPoints: {},
    fadeFromIndex: {}
  },
  emits: ["drag", "release", "close", "update:open", "update:activeSnapPoint"],
  setup(t, { emit: e }) {
    const i = t, s = e, { onNestedDrag: n, onNestedOpenChange: w, onNestedRelease: b } = le();
    function $() {
      w(false);
    }
    function g(d) {
      n(d);
    }
    function o(d) {
      d && w(d), s("update:open", d);
    }
    const y = xe(i, s);
    return (d, C) => (openBlock(), createBlock(lt, mergeProps(unref(y), {
      nested: "",
      onClose: $,
      onDrag: g,
      onRelease: unref(b),
      "onUpdate:open": o
    }), {
      default: withCtx(() => [
        renderSlot(d.$slots, "default")
      ]),
      _: 3
    }, 16, ["onRelease"]));
  }
});
var ct = defineComponent({
  __name: "DrawerOverlay",
  setup(t) {
    const { overlayRef: e, snapPoints: i, isVisible: s, isOpen: n, shouldFade: w } = le(), b = computed(() => {
      var $;
      return i && ((($ = i.value) == null ? void 0 : $.length) ?? 0) > 0;
    });
    return ($, g) => (openBlock(), createBlock(unref(Xi), {
      ref_key: "overlayRef",
      ref: e,
      "vaul-drawer-visible": unref(s) ? "true" : "false",
      "vaul-overlay": "",
      "vaul-snap-points": unref(n) && b.value ? "true" : "false",
      "vaul-snap-points-overlay": unref(n) && unref(w) ? "true" : "false"
    }, null, 8, ["vaul-drawer-visible", "vaul-snap-points", "vaul-snap-points-overlay"]));
  }
});
var dt = defineComponent({
  __name: "DrawerContent",
  setup(t) {
    const {
      open: e,
      isOpen: i,
      isVisible: s,
      snapPointsOffset: n,
      drawerRef: w,
      onPress: b,
      onDrag: $,
      onRelease: g,
      modal: o,
      emitOpenChange: y,
      dismissible: d,
      keyboardIsOpen: C,
      closeDrawer: u
    } = le(), B = computed(() => n.value && n.value.length > 0 ? `${n.value[0]}px` : "0");
    function r(l) {
      if (!o.value || l.defaultPrevented) {
        l.preventDefault();
        return;
      }
      C.value && (C.value = false), l.preventDefault(), d.value && y(false), !(!d.value || e.value !== void 0) && u();
    }
    return watch(
      i,
      (l) => {
        l && setTimeout(() => {
          s.value = true;
        }, 1);
      },
      { immediate: true }
    ), (l, c) => (openBlock(), createBlock(unref(qi), {
      ref_key: "drawerRef",
      ref: w,
      "vaul-drawer": "",
      "vaul-drawer-visible": unref(s) ? "true" : "false",
      style: normalizeStyle({ "--snap-point-height": B.value }),
      onPointerdown: unref(b),
      onPointermove: unref($),
      onPointerup: unref(g),
      onPointerDownOutside: r,
      onEscapeKeyDown: c[0] || (c[0] = (T) => {
        unref(d) || T.preventDefault();
      })
    }, {
      default: withCtx(() => [
        renderSlot(l.$slots, "default")
      ]),
      _: 3
    }, 8, ["vaul-drawer-visible", "style", "onPointerdown", "onPointermove", "onPointerup"]));
  }
});
export {
  Pl as DrawerClose,
  dt as DrawerContent,
  Ji as DrawerDescription,
  ct as DrawerOverlay,
  zf as DrawerPortal,
  lt as DrawerRoot,
  ut as DrawerRootNested,
  Zi as DrawerTitle,
  Pi as DrawerTrigger
};
//# sourceMappingURL=vaul-vue.js.map
